// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$a-name: 'a';
$a-x: 922px;
$a-y: 1290px;
$a-offset-x: -922px;
$a-offset-y: -1290px;
$a-width: 540px;
$a-height: 540px;
$a-total-width: 3627px;
$a-total-height: 2202px;
$a-image: '../images/sprite.png';
$a: (922px, 1290px, -922px, -1290px, 540px, 540px, 3627px, 2202px, '../images/sprite.png', 'a', );
$areadev-name: 'areadev';
$areadev-x: 1472px;
$areadev-y: 1290px;
$areadev-offset-x: -1472px;
$areadev-offset-y: -1290px;
$areadev-width: 500px;
$areadev-height: 511px;
$areadev-total-width: 3627px;
$areadev-total-height: 2202px;
$areadev-image: '../images/sprite.png';
$areadev: (1472px, 1290px, -1472px, -1290px, 500px, 511px, 3627px, 2202px, '../images/sprite.png', 'areadev', );
$live-p-01-name: 'live-p-01';
$live-p-01-x: 0px;
$live-p-01-y: 0px;
$live-p-01-offset-x: 0px;
$live-p-01-offset-y: 0px;
$live-p-01-width: 1205px;
$live-p-01-height: 1280px;
$live-p-01-total-width: 3627px;
$live-p-01-total-height: 2202px;
$live-p-01-image: '../images/sprite.png';
$live-p-01: (0px, 0px, 0px, 0px, 1205px, 1280px, 3627px, 2202px, '../images/sprite.png', 'live-p-01', );
$live-p-03-name: 'live-p-03';
$live-p-03-x: 1215px;
$live-p-03-y: 0px;
$live-p-03-offset-x: -1215px;
$live-p-03-offset-y: 0px;
$live-p-03-width: 1205px;
$live-p-03-height: 1280px;
$live-p-03-total-width: 3627px;
$live-p-03-total-height: 2202px;
$live-p-03-image: '../images/sprite.png';
$live-p-03: (1215px, 0px, -1215px, 0px, 1205px, 1280px, 3627px, 2202px, '../images/sprite.png', 'live-p-03', );
$live-p-04-name: 'live-p-04';
$live-p-04-x: 2430px;
$live-p-04-y: 0px;
$live-p-04-offset-x: -2430px;
$live-p-04-offset-y: 0px;
$live-p-04-width: 1197px;
$live-p-04-height: 1280px;
$live-p-04-total-width: 3627px;
$live-p-04-total-height: 2202px;
$live-p-04-image: '../images/sprite.png';
$live-p-04: (2430px, 0px, -2430px, 0px, 1197px, 1280px, 3627px, 2202px, '../images/sprite.png', 'live-p-04', );
$live-name: 'live';
$live-x: 2282px;
$live-y: 1362px;
$live-offset-x: -2282px;
$live-offset-y: -1362px;
$live-width: 100px;
$live-height: 100px;
$live-total-width: 3627px;
$live-total-height: 2202px;
$live-image: '../images/sprite.png';
$live: (2282px, 1362px, -2282px, -1362px, 100px, 100px, 3627px, 2202px, '../images/sprite.png', 'live', );
$londres-name: 'londres';
$londres-x: 1982px;
$londres-y: 1290px;
$londres-offset-x: -1982px;
$londres-offset-y: -1290px;
$londres-width: 290px;
$londres-height: 174px;
$londres-total-width: 3627px;
$londres-total-height: 2202px;
$londres-image: '../images/sprite.png';
$londres: (1982px, 1290px, -1982px, -1290px, 290px, 174px, 3627px, 2202px, '../images/sprite.png', 'londres', );
$mirage-pale-name: 'mirage-pale';
$mirage-pale-x: 0px;
$mirage-pale-y: 1290px;
$mirage-pale-offset-x: 0px;
$mirage-pale-offset-y: -1290px;
$mirage-pale-width: 912px;
$mirage-pale-height: 912px;
$mirage-pale-total-width: 3627px;
$mirage-pale-total-height: 2202px;
$mirage-pale-image: '../images/sprite.png';
$mirage-pale: (0px, 1290px, 0px, -1290px, 912px, 912px, 3627px, 2202px, '../images/sprite.png', 'mirage-pale', );
$youtube-name: 'youtube';
$youtube-x: 2282px;
$youtube-y: 1290px;
$youtube-offset-x: -2282px;
$youtube-offset-y: -1290px;
$youtube-width: 273px;
$youtube-height: 62px;
$youtube-total-width: 3627px;
$youtube-total-height: 2202px;
$youtube-image: '../images/sprite.png';
$youtube: (2282px, 1290px, -2282px, -1290px, 273px, 62px, 3627px, 2202px, '../images/sprite.png', 'youtube', );
$spritesheet-width: 3627px;
$spritesheet-height: 2202px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($a, $areadev, $live-p-01, $live-p-03, $live-p-04, $live, $londres, $mirage-pale, $youtube, );
$spritesheet: (3627px, 2202px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
